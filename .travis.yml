language: node_js
node_js:
  - "10"

env:
  PATH=$PATH:$HOME/.local/bin

cache:
  directories:
    - "node_modules"
    - "build"

install:
  - pip install --user awscli

stages:
  - name: build-testnet
    if: branch = develop
  - name: deploy-testnet
    if: branch = develop

  - name: build-stage
    if: branch = master
  - name: deploy-stage
    if: branch = master

  - name: build-prod
    if: tag =~ /^v\d+\.\d+(\.\d+)?$/
  - name: deploy-prod
    if: tag =~ /^v\d+\.\d+(\.\d+)?$/

jobs:
  include:
    - stage: build-testnet
      script:
        - export RECAPTCHA_SITE_KEY=$TEST_RECAPTCHA_SITE_KEY
        - export CRYPTOBRIDGE_PUB_KEY=$TEST_CRYPTOBRIDGE_PUB_KEY
        - npm install
        - npm run build-testnet
    - stage: deploy-testnet
      script:
        - ls -la ./build/dist/
        - cat ./build/dist/index.html
        - export AWS_ACCESS_KEY_ID=$TEST_AWS_ACCESS_KEY_ID
        - export AWS_SECRET_ACCESS_KEY=$TEST_AWS_SECRET_ACCESS_KEY
        - aws s3 rm s3://wallet.testnet.crypto-bridge.org/index.html
        - aws s3 sync ./build/dist/ s3://wallet.testnet.crypto-bridge.org/ --delete --exclude "assets/*"

    - stage: build-stage
      script:
        - export RECAPTCHA_SITE_KEY=$STAGE_RECAPTCHA_SITE_KEY
        - export CRYPTOBRIDGE_PUB_KEY=$STAGE_CRYPTOBRIDGE_PUB_KEY
        - npm install
        - npm run build-stage
    - stage: deploy-stage
      script:
        - ls -la ./build/dist/
        - cat ./build/dist/index.html
        - export AWS_ACCESS_KEY_ID=$STAGE_AWS_ACCESS_KEY_ID
        - export AWS_SECRET_ACCESS_KEY=$STAGE_AWS_SECRET_ACCESS_KEY
        - aws s3 rm s3://wallet.stage.crypto-bridge.org/index.html
        - aws s3 sync ./build/dist/ s3://wallet.stage.crypto-bridge.org/ --delete --exclude "assets/*"

    - stage: build-prod
      script:
        - export RECAPTCHA_SITE_KEY=$PROD_RECAPTCHA_SITE_KEY
        - export CRYPTOBRIDGE_PUB_KEY=$PROD_CRYPTOBRIDGE_PUB_KEY
        - npm install
        - npm run build
    - stage: deploy-prod
      script:
        - ls -la ./build/dist/
        - cat ./build/dist/index.html
        - export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID
        - export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY
        - aws s3 rm s3://wallet.crypto-bridge.org/index.html
        - aws s3 sync ./build/dist/ s3://wallet.crypto-bridge.org/ --delete --exclude "assets/*"
